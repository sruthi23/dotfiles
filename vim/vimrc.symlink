" General
set number  " Show line numbers
set relativenumber  "This turns on relative numbering
set linebreak " Break lines at word (requires Wrap lines)
set showbreak=+++ " Wrap-broken line prefix
set textwidth=100 " Line wrap (number of cols)
set showmatch " Highlight matching brace

set hlsearch  " Highlight all search results
set smartcase " Enable smart-case search
set ignorecase  " Always case-insensitive
set incsearch " Searches for strings incrementally

set autoindent  " Auto-indent new lines
set smartindent " Enable smart-indent
set smarttab  " Enable smart-tabs
set softtabstop=4 " Number of spaces per Tab

" Spellcheck for markdown
autocmd BufRead,BufNewFile *.md setlocal spell
set complete+=kspell

" Advanced
set ruler " Show row and column ruler information
set showtabline=0 " Show tab bar

set undolevels=200  " Number of undo levels
set backspace=indent,eol,start  " Backspace behaviour

" enable filetype detection
filetype plugin on

" set 'updatetime' to 5 seconds when in insert mode
" au CursorHoldI * stopinsert

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set shiftround
set expandtab
set clipboard=unnamed

set regexpengine=1
set autoread
set acd

set cursorline          " highlight current line"

let mapleader = "\<Space>" " Map leader
nnoremap <leader><leader> <C-^> " Switch buffers

" plugins
call plug#begin('~/.vim/plugged')

Plug 'Valloric/YouCompleteMe', { 'do': './install.py --tern-completer' }
Plug 'Chiel92/vim-autoformat'
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-surround'
Plug 'w0ng/vim-hybrid'
Plug 'godlygeek/tabular'
Plug 'terryma/vim-multiple-cursors'
Plug 'sjl/gundo.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'isRuslan/vim-es6'
Plug 'pangloss/vim-javascript'
Plug 'scrooloose/nerdtree'
Plug 'itchyny/lightline.vim'
Plug 'raimondi/delimitmate'
Plug 'wincent/command-t'
Plug 'lambdatoast/elm.vim', { 'for': 'elm' }
Plug 'prettier/vim-prettier', {
  \ 'do': 'yarn install',
  \ 'for': ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql', 'markdown'] }

call plug#end()

" autoformat
noremap <F3> :Autoformat<CR>

" Ignore things
set wildignore+=*.jpg,*.jpeg,*.gif,*.png,*.gif,*.psd,*.o,*.obj,*.min.js
set wildignore+=*/bower_components/*,*/node_modules/*
set wildignore+=*/vendor/*,*/.git/*,*/.hg/*,*/.svn/*,*/log/*,*/tmp/*
let g:CommandTWildIgnore=&wildignore . ",*/bower_components,*/elm-stuff,*/node_modules,*/_site"

" Swap
set dir=/private/tmp

" syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['standard']

" Color scheme
set background=dark
let g:hybrid_custom_term_colors = 1
let g:hybrid_reduced_contrast = 1
colorscheme hybrid

" gundo
nnoremap <F5> :GundoToggle<CR>
nnoremap <F6> :SyntasticToggleMode<CR>

" Remove trailing spaces
autocmd BufWritePre * :%s/\s\+$//e

" force vim
map <Left> :echo "damnit!"<cr>
map <Right> :echo "1 + 1 = ? "<cr>
map <Up> :echo "this is why you fail"<cr>
map <Down> :echo "nooooo!"<cr>

" evil mode
inoremap <Left> <nop>
inoremap <Right> <nop>
inoremap <Up> <nop>
inoremap <Down> <nop>

" nerdtree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if !argc() | NERDTree | endif
map <C-n> :NERDTreeToggle<CR>

" lightline
let g:lightline = {
  \ 'component': {
  \   'readonly': '%{&readonly?"тнд":""}',
  \ }
  \ }

" open ag.vim
nnoremap <leader>a :Ag
